DROP TABLE LoginAttempts;
DROP TABLE Transaction;
DROP TABLE TransactionMode;
DROP TABLE UserPreference;
DROP TABLE Notification;
DROP TABLE UserFeedback;
DROP TABLE FavouriteProducts;
DROP TABLE UserFavourites;
DROP TABLE Quantity;
DROP TABLE GiftCardValue;
DROP TABLE PromoCode;
DROP TABLE ProductOrders;
DROP TABLE UserRewardsHistory;
DROP TABLE UserRewards;
DROP TABLE Product;
DROP TABLE Orders;
DROP TABLE Brand;
DROP TABLE Category;
DROP TABLE CustomerPhoneDetails;
DROP TABLE Customer;
DROP TABLE Users;
DROP TABLE Roles;

CREATE TABLE Roles (
roleID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
isSuperAdmin NUMBER(1),
isCustomer NUMBER(1)
);

CREATE TABLE Users (
userID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
roleID INTEGER,
emailID VARCHAR(50),
password VARCHAR(50),
isActive NUMBER(1),
lastLogin TIMESTAMP,
FOREIGN KEY(roleID) REFERENCES Roles(roleID));

CREATE TABLE Customer (
customerID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
firstName VARCHAR(50),
lastName VARCHAR(50),
zipcode INTEGER,
address VARCHAR(255),
DOB DATE,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE CustomerPhoneDetails (
customerID INTEGER,
phoneNumber INTEGER,
phoneType VARCHAR(20),
PRIMARY KEY (customerID, phoneNumber),
FOREIGN KEY(customerID) REFERENCES Customer(customerID) ON DELETE CASCADE);

CREATE TABLE LoginAttempts (
userID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
loginAttempts INTEGER,
loginDatetime TIMESTAMP,
PRIMARY KEY (userID,loginAttempts),
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE TransactionMode(
transactionModeID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
transactionMode VARCHAR(20)
);

CREATE TABLE Transaction (
transactionID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
transactionModeID INTEGER,
status VARCHAR(20),
amount REAL,
transactionDatetime TIMESTAMP,
FOREIGN KEY(transactionModeID) REFERENCES TransactionMode(transactionModeID),
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE UserPreference (
preferenceID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
email NUMBER(1),
sms NUMBER(1),
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE Notification (
notificationID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
isSMSSent NUMBER(1),
isEmailSent NUMBER(1),
message VARCHAR(80),
notificationDatetime TIMESTAMP,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE UserFeedback (
feedbackID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
message VARCHAR(255),
rating INTEGER,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE Brand (
brandID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
brandName VARCHAR(40)
);

CREATE TABLE Category (
categoryID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
categoryName VARCHAR(40)
);

CREATE TABLE Product (
productID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
brandID INTEGER,
categoryID INTEGER,
productName VARCHAR(40),
description VARCHAR(255),
termsAndConditions VARCHAR(255),
stepsToRedeem VARCHAR(255),
imageURL VARCHAR(255),
FOREIGN KEY(brandID) REFERENCES Brand(brandID),
FOREIGN KEY(categoryID) REFERENCES Category(categoryID));

CREATE TABLE UserFavourites (
userID INTEGER,
favouriteID INTEGER,
PRIMARY KEY(userID, favouriteID),
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE FavouriteProducts (
userID INTEGER,
favouriteID INTEGER,
productID INTEGER,
PRIMARY KEY(userID, favouriteID, productID),
FOREIGN KEY(userID, favouriteID) REFERENCES UserFavourites(userID, favouriteID),
FOREIGN KEY(productID) REFERENCES Product(productID));

CREATE TABLE Quantity (
productID INTEGER,
quantity INTEGER,
PRIMARY KEY (productID, quantity),
FOREIGN KEY(productID) REFERENCES Product(productID) ON DELETE CASCADE);

CREATE TABLE GiftCardValue (
giftcardId INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
productID INTEGER,
giftCardNumber VARCHAR(16),
giftCardPin INTEGER,
FOREIGN KEY(productID) REFERENCES Product(productID));

CREATE TABLE PromoCode (
promocodeId INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
productID INTEGER,
Name VARCHAR(20),
discountInPercentage INTEGER,
FOREIGN KEY(productID) REFERENCES Product(productID));

CREATE TABLE Orders (
orderID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
status VARCHAR(20),
discount REAL,
totalAmount REAL,
startDate TIMESTAMP,
endDate TIMESTAMP,
orderDatetime TIMESTAMP,
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE ProductOrders (
orderID INTEGER,
productID INTEGER,
count INTEGER,
PRIMARY KEY (orderID, productID),
FOREIGN KEY(productID) REFERENCES Product(productID),
FOREIGN KEY(orderID) REFERENCES Orders(orderID));

CREATE TABLE UserRewards (
rewardID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
points REAL,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE UserRewardsHistory (
historyID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
rewardID INTEGER,
orderID INTEGER,
points REAL,
modifiedDatetime TIMESTAMP,
FOREIGN KEY(rewardID) REFERENCES UserRewards(rewardID),
FOREIGN KEY(orderID) REFERENCES Orders(orderID));