DROP TABLE LoginAttempts;
DROP TABLE Transaction;
DROP TABLE TransactionMode;
DROP TABLE UserPreference;
DROP TABLE Notification;
DROP TABLE UserFeedback;
DROP TABLE FavouriteProducts;
DROP TABLE UserFavourites;
DROP TABLE Quantity;
DROP TABLE GiftCard;
DROP TABLE PromoCode;
DROP TABLE ProductOrders;
DROP TABLE UserRewardsHistory;
DROP TABLE UserRewards;
DROP TABLE Product;
DROP TABLE Orders;
DROP TABLE ProductCategory;
DROP TABLE Brand;
DROP TABLE CustomerPhoneDetails;
DROP TABLE Customer;
DROP TABLE Users;
DROP TABLE Roles;

CREATE TABLE Roles (
roleID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
isSuperAdmin NUMBER(1) NOT NULL,
isCustomer NUMBER(1) NOT NULL
);

CREATE TABLE Users (
userID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
roleID INTEGER NOT NULL,
emailID VARCHAR(50),
password VARCHAR(50),
isActive NUMBER(1) NOT NULL,
lastLogin TIMESTAMP NOT NULL,
FOREIGN KEY(roleID) REFERENCES Roles(roleID));

CREATE TABLE Customer (
customerID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
firstName VARCHAR(50) NOT NULL,
lastName VARCHAR(50) NOT NULL,
zipcode INTEGER NOT NULL,
address VARCHAR(255),
DOB DATE,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE CustomerPhoneDetails (
customerID INTEGER NOT NULL,
phoneNumber INTEGER NOT NULL,
phoneType VARCHAR(20) NOT NULL,
PRIMARY KEY (customerID, phoneNumber),
FOREIGN KEY(customerID) REFERENCES Customer(customerID) ON DELETE CASCADE);

CREATE TABLE LoginAttempts (
userID INTEGER,
loginAttempts INTEGER NOT NULL,
loginDatetime TIMESTAMP NOT NULL,
PRIMARY KEY (userID,loginAttempts),
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE TransactionMode(
transactionModeID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
transactionMode VARCHAR(20)
);

CREATE TABLE Transaction (
transactionID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER NOT NULL,
transactionModeID INTEGER NOT NULL,
status VARCHAR(20),
amount REAL NOT NULL,
transactionDatetime TIMESTAMP,
FOREIGN KEY(transactionModeID) REFERENCES TransactionMode(transactionModeID),
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE UserPreference (
preferenceID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER NOT NULL,
email NUMBER(1) NOT NULL,
sms NUMBER(1) NOT NULL,
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE Notification (
notificationID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER,
isSMSSent NUMBER(1),
isEmailSent NUMBER(1),
message VARCHAR(80),
notificationDatetime TIMESTAMP,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE UserFeedback (
feedbackID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER NOT NULL,
message VARCHAR(255),
rating INTEGER,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE Brand (
brandID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
brandName VARCHAR(40)
);

CREATE TABLE ProductCategory (
categoryID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
categoryName VARCHAR(40)
);

CREATE TABLE Product (
productID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
brandID INTEGER NOT NULL,
categoryID INTEGER NOT NULL,
productName VARCHAR(40) NOT NULL,
description VARCHAR(255),
termsAndConditions VARCHAR(255),
stepsToRedeem VARCHAR(255),
imageURL VARCHAR(255),
FOREIGN KEY(brandID) REFERENCES Brand(brandID),
FOREIGN KEY(categoryID) REFERENCES ProductCategory(categoryID));

CREATE TABLE UserFavourites (
userID INTEGER NOT NULL,
favouriteID INTEGER NOT NULL,
PRIMARY KEY(userID, favouriteID),
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE FavouriteProducts (
userID INTEGER NOT NULL,
favouriteID INTEGER NOT NULL,
productID INTEGER NOT NULL,
PRIMARY KEY(userID, favouriteID, productID),
FOREIGN KEY(userID, favouriteID) REFERENCES UserFavourites(userID, favouriteID),
FOREIGN KEY(productID) REFERENCES Product(productID));

CREATE TABLE Quantity (
productID INTEGER NOT NULL,
quantity INTEGER NOT NULL,
PRIMARY KEY (productID, quantity),
FOREIGN KEY(productID) REFERENCES Product(productID) ON DELETE CASCADE);

CREATE TABLE GiftCard (
giftcardId INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
productID INTEGER NOT NULL,
giftCardNumber VARCHAR(16),
giftCardPin INTEGER NOT NULL,
FOREIGN KEY(productID) REFERENCES Product(productID));

CREATE TABLE PromoCode (
promocodeId INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
productID INTEGER NOT NULL,
Name VARCHAR(20),
discountInPercentage INTEGER NOT NULL,
FOREIGN KEY(productID) REFERENCES Product(productID));

CREATE TABLE Orders (
orderID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER NOT NULL,
status VARCHAR(20),
discount REAL NOT NULL,
totalAmount REAL NOT NULL,
startDate TIMESTAMP NOT NULL,
endDate TIMESTAMP NOT NULL,
orderDatetime TIMESTAMP NOT NULL,
FOREIGN KEY(userID) REFERENCES Users(userID) ON DELETE CASCADE);

CREATE TABLE ProductOrders (
orderID INTEGER NOT NULL,
productID INTEGER NOT NULL,
count INTEGER NOT NULL,
PRIMARY KEY (orderID, productID),
FOREIGN KEY(productID) REFERENCES Product(productID),
FOREIGN KEY(orderID) REFERENCES Orders(orderID));

CREATE TABLE UserRewards (
rewardID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
userID INTEGER NOT NULL,
points REAL,
FOREIGN KEY(userID) REFERENCES Users(userID));

CREATE TABLE UserRewardsHistory (
historyID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) PRIMARY KEY,
rewardID INTEGER NOT NULL,
orderID INTEGER NOT NULL,
points REAL NOT NULL,
modifiedDatetime TIMESTAMP,
FOREIGN KEY(rewardID) REFERENCES UserRewards(rewardID),
FOREIGN KEY(orderID) REFERENCES Orders(orderID));



INSERT INTO ProductCategory (categoryName) VALUES ('E-commerce/Online');
INSERT INTO ProductCategory (categoryName) VALUES ('Fashion / Lifestyle');
INSERT INTO ProductCategory (categoryName) VALUES ('Grocery');
INSERT INTO ProductCategory (categoryName) VALUES ('Home Needs');
INSERT INTO ProductCategory (categoryName) VALUES ('Home Furnishings');
INSERT INTO ProductCategory (categoryName) VALUES ('Travel');
INSERT INTO ProductCategory (categoryName) VALUES ('Gaming');
INSERT INTO ProductCategory (categoryName) VALUES ('Entertainment');
INSERT INTO ProductCategory (categoryName) VALUES ('Health / Beauty');
INSERT INTO ProductCategory (categoryName) VALUES ('Electronics');
INSERT INTO ProductCategory (categoryName) VALUES ('Food / Beverages');
INSERT INTO ProductCategory (categoryName) VALUES ('Hospitality');
INSERT INTO ProductCategory (categoryName) VALUES ('Jewellery');
INSERT INTO ProductCategory (categoryName) VALUES ('Luxury Brand');
INSERT INTO ProductCategory (categoryName) VALUES ('International Brands');
INSERT INTO ProductCategory (categoryName) VALUES ('Sportswear / Footwear');
INSERT INTO ProductCategory (categoryName) VALUES ('Baby Products');
INSERT INTO ProductCategory (categoryName) VALUES ('Books');
INSERT INTO ProductCategory (categoryName) VALUES ('Finance and Insurance');

INSERT INTO TRANSACTIONMODE VALUES(1,'Credit Card');
INSERT INTO TRANSACTIONMODE VALUES(2,'Debit Card');